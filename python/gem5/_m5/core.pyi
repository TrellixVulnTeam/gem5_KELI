from typing import overload
MaxTick: int
compileDate: str
flag_DEBUG: bool
flag_NDEBUG: bool
flag_TRACING_ON: bool
gem5Version: str

def clockFrequencyFixed(*args, **kwargs) -> Any: ...
def curTick(*args, **kwargs) -> Any: ...
def disableAllListeners(*args, **kwargs) -> Any: ...
def doExitCleanup(*args, **kwargs) -> Any: ...
def fixClockFrequency(*args, **kwargs) -> Any: ...
def getCheckpoint(arg0: str) -> CheckpointIn: ...
def getClockFrequency(*args, **kwargs) -> Any: ...
def listenersDisabled(*args, **kwargs) -> Any: ...
def listenersLoopbackOnly(*args, **kwargs) -> Any: ...
def seedRandom(arg0: int) -> None: ...
def serializeAll(arg0: str) -> None: ...
def setClockFrequency(arg0: int) -> None: ...
def setLogLevel(arg0: LogLevel) -> None: ...
def setOutputDir(arg0: str) -> None: ...
def unserializeGlobals(arg0: CheckpointIn) -> None: ...

class Cycles:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: int) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> Any: ...
    def __add__(self, arg0: Cycles) -> Cycles: ...
    def __int__(self) -> int: ...
    def __sub__(self, arg0: Cycles) -> Cycles: ...

class LogLevel:
    FATAL: Any = ...
    HACK: Any = ...
    INFO: Any = ...
    PANIC: Any = ...
    WARN: Any = ...
    __entries: Any = ...
    def __init__(self, arg0: int) -> None: ...
    def __eq__(self, other) -> Any: ...
    def __getstate__(self) -> Any: ...
    def __hash__(self) -> Any: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other) -> Any: ...
    def __setstate__(self, state) -> Any: ...
    @property
    def name(self) -> str: ...
    @property
    def __doc__(self) -> str: ...
    @property
    def __members__(self) -> dict: ...

class tm:
    def __init__(self, *args, **kwargs) -> None: ...
    def gmtime(self, *args, **kwargs) -> Any: ...
    @property
    def tm_hour(self) -> int: ...
    @tm_hour.setter
    def tm_hour(self, val: int) -> None: ...
    @property
    def tm_isdst(self) -> int: ...
    @tm_isdst.setter
    def tm_isdst(self, val: int) -> None: ...
    @property
    def tm_mday(self) -> int: ...
    @tm_mday.setter
    def tm_mday(self, val: int) -> None: ...
    @property
    def tm_min(self) -> int: ...
    @tm_min.setter
    def tm_min(self, val: int) -> None: ...
    @property
    def tm_mon(self) -> int: ...
    @tm_mon.setter
    def tm_mon(self, val: int) -> None: ...
    @property
    def tm_sec(self) -> int: ...
    @tm_sec.setter
    def tm_sec(self, val: int) -> None: ...
    @property
    def tm_wday(self) -> int: ...
    @tm_wday.setter
    def tm_wday(self, val: int) -> None: ...
    @property
    def tm_yday(self) -> int: ...
    @tm_yday.setter
    def tm_yday(self, val: int) -> None: ...
